#lang racket
(require "ML3.rkt")

(define model (DNN (list
      (Layer 2)
      (Layer 3)
      (Layer 2))))

(define output-categories (list 0 1))

(define input-data (list 1 1))

(define train-data (list (list 0 0) (list 0 1) (list 1 0) (list 1 1)))
(define train-data2 (list (list 0 0) (list 0 1) ))
(define train-data3 (list (list 0 0) ))

(define destination (list 0 0 0 1))
(define destination2 (list 0 0))
(define destination3 (list 0))

(define epoch 1)
(define learning-rate 0.001)

(define trained-model (Fit model train-data destination epoch output-categories learning-rate))

(display "trained model neurons: ")
(display (car trained-model)) (newline)

(display "trained model weights: ")
(display (cadr trained-model)) (newline)

(Predict trained-model input-data)